{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","components/Loader/Loader.tsx","app/hooks.ts","components/TodoFilter/TodoFilter.tsx","api.ts","components/TodoModal/TodoModal.tsx","components/TodoListItem/TodoListItem.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","initialState","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","Loader","className","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoFilter","dispatch","onSubmit","event","preventDefault","value","onChange","target","filterActions","placeholder","style","pointerEvents","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","selectedTodo","useEffect","userId","id","currentTodoActions","title","completed","href","email","name","TodoListItem","isCurrentTodo","cn","TodoList","length","map","App","isLoading","setIsLoading","todosFromServer","TodosAction","finally","filteredTodos","checkInput","toLowerCase","includes","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31083719.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case ('currentTodo/REMOVE'):\n      return null;\n\n    case ('currentTodo/SET'):\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQueryAction = {\n  type: 'filter/SET_QUERY',\n  payload: string,\n};\n\ntype SetFilterAction = {\n  type: 'filter/SET_STATUS',\n  payload: Status,\n};\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nconst setFilter = (status: Status): SetFilterAction => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\n\nexport const actions = { setQuery, setFilter };\n\ntype Action = SetQueryAction | SetFilterAction;\n\ntype State = {\n  query: string;\n  status: Status;\n};\n\nconst initialState: State = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (\n  state: State = initialState,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'filter/SET_QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'filter/SET_STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET',\n  payload: Todo[],\n};\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\nconst todosReducer = (\n  state: Todo[] = [],\n  action: SetTodosAction,\n): Todo[] => {\n  switch (action.type) {\n    case ('todos/SET'):\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const status = useAppSelector(state => state.filter.status);\n  const query = useAppSelector(state => state.filter.query);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => {\n              const { value } = event.target;\n\n              dispatch(filterActions.setFilter(value as Status));\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            const { value } = event.target;\n\n            dispatch(filterActions.setQuery(value));\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(filterActions.setQuery(''))}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useAppDispatch();\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setUser);\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user\n        ? (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => dispatch(currentTodoActions.removeTodo())}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p\n                className=\"block\"\n                data-cy=\"modal-title\"\n              >\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo?.completed\n                  ? (\n                    <strong className=\"has-text-success\">\n                      Done\n                    </strong>\n                  )\n                  : (\n                    <strong className=\"has-text-danger\">\n                      Planned\n                    </strong>\n                  )}\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )\n        : (<Loader />)}\n    </div>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoListItem: React.FC<Props> = ({ todo }) => {\n  const dispatch = useAppDispatch();\n\n  const isCurrentTodo = useAppSelector(state => (\n    todo.id === state.currentTodo?.id\n  ));\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({ 'has-background-info-light': isCurrentTodo })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={todo.completed\n          ? 'has-text-success'\n          : 'has-text-danger'}\n        >\n          {todo.title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => dispatch(currentTodoActions.setTodo(todo))}\n        >\n          <span className=\"icon\">\n            <i\n              className={cn('far',\n                isCurrentTodo\n                  ? 'fa-eye-slash'\n                  : 'fa-eye')}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoListItem } from '../TodoListItem/TodoListItem';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {todos.length === 0\n        ? (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        )\n        : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {todos.map(todo => (\n                <TodoListItem todo={todo} key={todo.id} />\n              ))}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Loader } from './components/Loader';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { TodoList } from './components/TodoList';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions as TodosAction } from './features/todos';\nimport { RootState } from './app/store';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const dispatch = useAppDispatch();\n\n  const selectedTodo = useAppSelector((state) => state.currentTodo);\n\n  useEffect(() => {\n    getTodos()\n      .then((todosFromServer) => {\n        dispatch(TodosAction.setTodos(todosFromServer));\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filteringTodos = (state: RootState) => {\n    const { todos } = state;\n    const { status, query } = state.filter;\n\n    return todos.filter(todo => {\n      const { title, completed } = todo;\n      const checkInput = title\n        .toLowerCase()\n        .includes(query.toLowerCase());\n\n      switch (status) {\n        case 'all':\n          return checkInput;\n        case 'active':\n          return checkInput && !completed;\n        case 'completed':\n          return checkInput && completed;\n        default:\n          return true;\n      }\n    });\n  };\n\n  const filteredTodos = useAppSelector(filteringTodos);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (<Loader />)\n                : (<TodoList todos={filteredTodos} />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}